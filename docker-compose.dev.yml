version: '3.8'

services:
  # Development Next.js Application
  liquor-store-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: liquor-aramac-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_CONVEX_URL=${NEXT_PUBLIC_CONVEX_URL}
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    networks:
      - liquor-dev-network
    depends_on:
      - redis-dev

  # Development Redis
  redis-dev:
    image: redis:7.2-alpine
    container_name: liquor-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    networks:
      - liquor-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development PostgreSQL
  postgres-dev:
    image: postgres:15-alpine
    container_name: liquor-postgres-dev
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=liquor_store_dev
      - POSTGRES_USER=liquor_dev
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password_123}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - liquor-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U liquor_dev -d liquor_store_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: liquor-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web interface
    networks:
      - liquor-dev-network

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: liquor-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres-dev
    depends_on:
      - postgres-dev
    networks:
      - liquor-dev-network

volumes:
  redis_dev_data:
    driver: local
  postgres_dev_data:
    driver: local

networks:
  liquor-dev-network:
    driver: bridge