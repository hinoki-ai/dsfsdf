# CLAUDE.md

This file provides guidance to Claude Code (claude.ai/code) when working with code in this repository.
This file provides guidance to Claude Code (claude.ai/code) when working with code in this repository.
### Core Development

- **Development server**: `npm run dev` (default port) or `npm run dev:port3000` (port 3000 specific)
- **Development with Turbopack**: `npm run dev:turbo` (faster builds)
- **Build**: `npm run build` (production build)
- **Start**: `npm start` (production server)
- **Lint**: `npm run lint` (ESLint with Next.js rules)

### Database Operations

- **Convex development**: `npm run convex:dev` (start local Convex server)
- **Seed database**: `npm run seed` (populate with sample data)
- **Force seed**: `npm run seed:force` (reset and seed database)
- **Deploy database**: `npm run convex:deploy` (production deployment)

### Docker & Deployment

- **Docker build**: `npm run docker:build`
- **Docker run**: `npm run docker:run`
- **Development compose**: `docker-compose -f docker-compose.dev.yml up`
- **Production compose**: `npm run deploy:docker`
- **Full deployment**: `npm run deploy:full` (database + docker)
- **Health check**: `npm run health`

## Project Architecture

### Tech Stack

- **Frontend**: Next.js 15 with App Router + TypeScript + Tailwind CSS 4
- **Authentication**: Clerk with role-based permissions
- **Database**: Convex (real-time database with functions)
- **UI Components**: Radix UI primitives with custom design system
- **Styling**: Custom design system with glass morphism effects
- **Internationalization**: Custom "Divine Parsing Oracle" i18n system
- **State Management**: Zustand for client-side state
- **Icons**: Lucide React + Tabler Icons

### Key Architectural Patterns

#### Internationalization System

The project uses a custom i18n system called "Divine Parsing Oracle" with:

- Automatic language detection based on IP geolocation and browser preferences
- Chilean Spanish (es) as default locale for local market
- Smart routing with `/[locale]/` structure
- Middleware-based locale detection and routing
- Environment-driven configuration for language detection rules

#### Age Verification System

Implements Chilean legal compliance (Law 19.925) with:

- Modal-based age verification required before accessing alcohol products
- Multiple verification methods supported
- Privacy-focused data handling with automatic deletion
- Glass morphism UI design for premium experience

#### Design System

- **Premium Glass Morphism**: Custom backdrop-filter effects with rgba backgrounds
- **Dark Mode First**: Default dark theme optimized for luxury experience
- **Mobile-First Responsive**: Touch-optimized interactions and responsive design
- **Custom Color Tokens**: Semantic color system using CSS custom properties
- **Brand Colors**: Amber/burgundy palette inspired by premium spirits

### File Structure Organization

#### App Router Structure (`/app`)

- `[locale]/`: Internationalized routes (Spanish/English)
  - `productos/`: Product catalog pages
  - `productos/[slug]/`: Individual product pages
- `admin/`: Protected admin dashboard
  - `inventario/`: Inventory management
  - `pedidos/`: Order management
  - `productos/`: Product management
- `carrito/`: Shopping cart page
- `checkout/`: Checkout flow

#### Component Architecture (`/components`)

- `ui/`: Reusable design system components based on Radix UI
- `age-verification.tsx`: Chilean law compliance component
- `clerk-provider.tsx`: Authentication wrapper
- `header.tsx`: Main navigation with locale switching
- `product-*.tsx`: Product-related components with filtering

#### Core Libraries (`/lib`)

- `i18n.ts`: Divine Parsing Oracle i18n system with intelligent detection
- `utils.ts`: Utility functions including age verification logic
- `accessibility.ts`: WCAG compliance utilities
- `color-palette.ts`: Brand color system management

#### Database Layer (`/convex`)

Currently contains only generated files - database schema was removed from tracking but likely includes:

- Product catalog management
- User authentication integration
- Shopping cart persistence
- Order management

### Configuration Files

#### Next.js Configuration (`next.config.js`)

- Standalone output for Docker deployment
- Security headers (X-Frame-Options, Content-Security-Policy)
- Image optimization with custom domains
- Spanish URL redirects (`/products` â†’ `/productos`)
- Production optimizations with bundle analysis

#### TypeScript Configuration (`tsconfig.json`)

- Path aliases: `@/*` for root, `@/components/*`, `@/lib/*`, `@/convex/*`
- Strict mode enabled with ES2017 target
- Next.js plugin integration

#### Tailwind Configuration (`tailwind.config.js`)

- Custom design tokens for glass morphism effects
- Semantic color system with CSS custom properties
- Premium animations and transitions
- Mobile-first responsive utilities

## Key Development Patterns

### Age Verification Integration

When working with product pages or alcohol-related content:

- Always check if age verification is required
- Use the `AgeVerification` component from `@/components/age-verification`
- Follow Chilean legal requirements (minimum 18 years)
- Implement proper error states and privacy notices

### Internationalization Usage

- Use `useTranslation(locale)` hook for component translations
- Access translations via `divineTranslationOracle.getTranslation()`
- All user-facing strings must support Spanish/English
- URLs must follow locale pattern: `/[locale]/page`

### Design System Consistency

- Use glass morphism classes: `glass-effect`, `glass-medium`, `glass-strong`
- Follow mobile-first responsive design with custom container system
- Implement premium animations with custom keyframes
- Use semantic color tokens for alcohol categories and status indicators

### Authentication & Authorization

- Protected routes use Clerk middleware with `isProtectedRoute` matcher
- Admin pages require appropriate role-based permissions
- Age verification state should persist across sessions
- User preferences (language, cart) should sync with authentication

## Environment Variables Required

### Core Configuration

- `NEXT_PUBLIC_CONVEX_URL`: Convex database URL
- `NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY` + `CLERK_SECRET_KEY`: Authentication

### Internationalization

- `NEXT_PUBLIC_DEFAULT_LOCALE=es`: Default to Chilean Spanish
- `NEXT_PUBLIC_SUPPORTED_LOCALES=es,en`: Supported languages
- `NEXT_PUBLIC_ENABLE_LANGUAGE_DETECTION=true`: Enable smart detection
- `NEXT_PUBLIC_CHILEAN_IP_RANGES`: IP ranges for geolocation

### Optional Services

- Stripe keys for payment processing
- SendGrid for email services
- Google Analytics for tracking

## Legal & Compliance Notes

### Chilean Alcohol Regulations

- Age verification is legally required (Law 19.925)
- Geographic restrictions may apply for alcohol delivery
- Proper disclaimers and warnings must be displayed
- Data privacy compliance with Chilean regulations

### Accessibility Requirements

- WCAG 2.1 AA compliance targeted
- Mobile-first responsive design mandatory
- Screen reader compatibility for age verification
- Keyboard navigation support throughout

## Development Notes

### Before Making Changes

1. Check if Convex development server is running (`npm run convex:dev`)
2. Verify environment variables are configured (use `./scripts/setup-env.sh`)
3. Test age verification flow for any alcohol-related changes
4. Ensure translations exist for both Spanish and English

### Testing Considerations

- Test age verification with various birth dates
- Verify locale detection with different IP addresses and browser settings
- Check responsive design across mobile/tablet/desktop viewports
- Validate glass morphism effects render correctly across browsers

### Performance Requirements

- Core Web Vitals optimization is critical
- Image optimization enabled for product catalog
- Bundle analysis available via Next.js analyzer
- Aggressive caching strategy implemented
